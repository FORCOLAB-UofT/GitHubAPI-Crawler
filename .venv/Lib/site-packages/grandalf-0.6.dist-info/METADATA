Metadata-Version: 2.1
Name: grandalf
Version: 0.6
Summary: Graph and drawing algorithms framework
Home-page: https://github.com/bdcht/grandalf
Author: Axel Tillequin
Author-email: bdcht3@gmail.com
License: GPLv2 | EPLv1
Description-Content-Type: UNKNOWN
Keywords: graphviz networkx development
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Requires-Dist: pyparsing
Requires-Dist: future
Provides-Extra: full
Requires-Dist: numpy; extra == 'full'
Requires-Dist: ply; extra == 'full'


Grandalf is a python package made for experimentations with graphs and drawing
algorithms. It is written in pure python, and implements two layouts: the Sugiyama
hierarchical layout and the force-driven or energy minimization approach.
While not as fast or featured as *graphviz* or other libraries like *OGDF* (C++),
*GDToolkit* (C), *tulip* (Java), it provides a way to draw and navigate graphs
no larger than thousands of nodes, while keeping the source code simple enough
to make it possible to easily tweak and hack any part of it for experimental purpose.
With a total of about 1500 lines of python, the code involved in
drawing the Sugiyama (dot) layout fits in less than 600 lines.
The energy minimization approach is comprised of only 250 lines!

Grandalf does only two not-so-simple things:

- computing the nodes (x,y) coordinates (based on provided nodes dimensions, and a
  chosen layout)
- routing the edges with lines or nurbs

It doesn't depend on any GTK/Qt/whatever graphics toolkit.
This means that it will help you find *where* to
draw things like nodes and edges, but it's up to you to actually draw things with
your favorite graphics toolkit.


